name: Deploy terraform in GCP

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  terraform_plan:
    runs-on: ubuntu-latest
    env:
      TF_VAR_gitpat_secret: ${{ secrets.GITPAT_SECRET_TOKEN }}

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Authenticate github with GCP
        uses: google-github-actions/auth@v2.0.0
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.12.2"

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        run: |
          terraform init -no-color

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan
        run: |
          terraform plan -input=false -out='terraform-plan.log'
      - name: Upload Terraform Log Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-logs
          path: terraform-plan.log

  terraform_apply:
    runs-on: ubuntu-latest
    needs: terraform_plan
    env:
      TF_VAR_gitpat_secret: ${{ secrets.GITPAT_SECRET_TOKEN }}
    environment: prd
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Authenticate github with GCP
        uses: google-github-actions/auth@v2.0.0
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.12.2"

      - name: Terraform Init
        run: |
          terraform init -no-color
      - name: Terraform Plan
        run: |
          terraform plan -input=false
      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
